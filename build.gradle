buildscript {
    ext.kotlin_version = '1.4.10'
    repositories {
        mavenCentral()
        maven {
            name 'JFrog OSS snapshot repo'
            url  'https://oss.jfrog.org/oss-snapshot-local/'
        }
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.checkerframework' version '0.5.10'
    id 'java'
}

group 'com.newerty.derivedStats'
version '1.0-SNAPSHOT'

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'antlr'
apply plugin: 'idea'
apply plugin: 'org.checkerframework'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    antlr "org.antlr:antlr4:4.8"
    compile "org.antlr:antlr4-runtime:4.8"

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    implementation 'junit:junit:4.13'

    implementation group: 'com.google.guava', name: 'guava', version: '14.0'

    implementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.29'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'

    implementation "com.google.truth:truth:1.0.1"

    implementation 'io.cucumber:cucumber-java:6.8.1'
    implementation 'io.cucumber:cucumber-junit:6.8.1'
    implementation 'io.cucumber:cucumber-picocontainer:6.8.1'



}


generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ['-visitor', '-package', 'com.newerty.derivedStats']
    outputDirectory = new File("${project.buildDir}/generated-src/antlr/main/com/newerty/derivedStats".toString())
}

compileJava.dependsOn generateGrammarSource

sourceSets {
    generated {
        java.srcDir 'generated-src/antlr/main'
    }
}

compileJava.source sourceSets.generated.java, sourceSets.main.java

configurations {
    cucumberRuntime {
        extendsFrom implementation
    }
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'com.newerty.derivedStats.cucumber', 'src/test/resources']
        }
    }
}

idea {
    module {
        sourceDirs += file("generated-src/antlr/main")
    }
}

clean {
    delete "generated-src"
}
